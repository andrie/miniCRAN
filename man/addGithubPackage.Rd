% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/addPackages.R
\docType{methods}
\name{addGithubPackage}
\alias{addGithubPackage}
\title{Add packages from GitHub to a miniCRAN repository.}
\usage{
addGithubPackage(
  repo = NULL,
  path = NULL,
  type = "source",
  Rversion = R.version,
  writePACKAGES = TRUE,
  deps = FALSE,
  quiet = FALSE,
  ref = "HEAD",
  subdir = NULL,
  auth_token = github_pat(quiet),
  host = "api.github.com"
)
}
\arguments{
\item{repo}{Character vector. Name of repository on github, e.g.
\code{"andrie/rrd"}}

\item{path}{Destination download path. This path is the root folder of your
new repository.}

\item{type}{Possible values are (currently) "source", "mac.binary" and
"win.binary": the binary types can be listed and downloaded but not
installed on other platforms.  Passed to \code{\link[=download.packages]{download.packages()}}.}

\item{Rversion}{Version of R (only used if \code{type} is not \code{source}.) Defaults to \link{R.version}, but this can be specified as any of the following formats:
\itemize{
\item a character string with the two digit R version, e.g. "3.1"
\item a list with components \code{major} and \code{minor}
\item the result of \code{\link[=getRversion]{getRversion()}}
\item the result of \link{R.version}
}}

\item{writePACKAGES}{If TRUE, calls \code{\link[=write_PACKAGES]{write_PACKAGES()}} to update the
repository PACKAGES file.}

\item{deps}{logical indicating whether the package dependencies should be
added (default \code{TRUE}).}

\item{quiet}{If TRUE, suppress status messages (if any), and the progress bar
during download.}

\item{ref}{Desired git reference. Could be a commit, tag, or branch
name, or a call to \code{\link[remotes:github_pull]{github_pull()}} or \code{\link[remotes:github_release]{github_release()}}. Defaults to
\code{"HEAD"}, which means the default branch on GitHub and for git remotes.
See \href{https://help.github.com/en/github/administering-a-repository/setting-the-default-branch}{setting-the-default-branch}
for more details.}

\item{subdir}{Subdirectory within repo that contains the R package.}

\item{auth_token}{To install from a private repo, generate a personal
access token (PAT) with at least repo scope in
\url{https://github.com/settings/tokens} and
supply to this argument. This is safer than using a password because
you can easily delete a PAT without affecting any others. Defaults to
the \code{GITHUB_PAT} environment variable.}

\item{host}{GitHub API host to use. Override with your GitHub enterprise
hostname, for example, \code{"github.hostname.com/api/v3"}.}
}
\value{
Installs the packages from GitHub and returns the new package index.
}
\description{
Download the package source from the GitHub repository specified by \code{repo},
build the source package and add it to the miniCRAN repository.
}
\details{
It uses the \code{remotes} package to download packages source from GitHub and the
\code{devtools} package to build packages from source.
}
\note{
Currently, adding packages from GitHub does not check nor download
their dependencies.
}
